@using WebMatrix.Data

@{
    // hier geef je aan dat je de layout wilt gebruiken
    Layout ="~/_SiteLayout.cshtml";

    //Hier maak je de login variabelen aan
    var LoginUser = "";
    var LoginPassword = "";

    //hier maak je de GuestCode variabelen aan
    var LoginCode = "";

    //hier maak je de Register variabelen aan
    bool pwvalidation = true;
    var RegisterUname = "";
    var RegisterEmail = "";
    var RegisterPassword = "";
    var RegisterName = "";
    var RegisterPasswordConfirm = "";
    var hashed = "";
    var sha256 = "";
    var sha1 = "";
    var salt = "";
    var RegisterHashedPassword = "";

    //Password Reset
    var ResetEmail = "";

    //hier maak je de validatie messages voor de login
    Validation.RequireField("LoginUser", "voer je gebruikersnaam in");
    Validation.RequireField("LoginPassword", "voer je wachtwoord in");

    //hier maak je de validatie messages voor de register
    Validation.RequireField("RegisterUname", "Voer een gebruikersnaam in.");
    Validation.RequireField("RegisterPassword", "Voer een wachtwoord in.");
    Validation.RequireField("RegisterEmail", "Voer een e-mail adres in");
    Validation.RequireField("RegisterName", "Voer een naam in.");

    //hier maak je de validatie messages voor de wwreset
    Validation.RequireField("ResetEmail","Voer je e-mail adres in");

    //LoginForm
    {
        //hier begint het login form
        if (IsPost)
        {
            //hier selecteer je de username en het password
            LoginUser = Request.Form["LoginUser"];
            LoginPassword = Request.Form["LoginPassword"];

            if (Validation.IsValid())
            {
                //hier wordt de database geopend
                string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\BridesDatabase.mdf;Integrated Security=True";
                string provider = "System.Data.SqlClient";
                Database db = Database.OpenConnectionString(connectionString, provider);

                //hier haal je de wachtwoorden uit de database
                var LoginHashedPassword = db.QueryValue("SELECT Password FROM Account WHERE LOWER(LoginPassword) = LOWER(@0)", LoginPassword);
                LoginHashedPassword.ToString();

                //hier maak je de checkpassword en vergelijk je de wachtwoorden
                var checkPassword = false;
                checkPassword = Crypto.VerifyHashedPassword(LoginHashedPassword, LoginPassword);

                //hier kijkt hij of de wachtwoorden overeenkwamen
                if (checkPassword == true)
                {
                    //hier stel je de sessions in
                    Session["LoggedIn"] = "Yes";
                    Session["Username"] = db.QueryValue("SELECT Email FROM Account WHERE LOWER(Email) = LOWER(@0)", LoginUser);
                    Session["UniqueCode"] = db.QueryValue("SELECT Code FROM Account WHERE LOWER(Email) = LOWER(@0)", LoginUser);
                    Session["Id"] = db.QueryValue("SELECT id FROM Account WHERE LOWER(Email) = LOWER(@0)", LoginUser);

                    //hier stuur je de gebruiker door naar de cado pagina
                    Response.Redirect("~/BruidenPagina.cshtml");
                }
            }
        }
    }

    //GuestCode
    {
        //hier haal je het account ID op
        String selectLoginCode = "SELECT id FROM Account WHERE Code = @0";

        //hier begint de GuestCode form
        if (!Request.QueryString["searchCode"].IsEmpty())
        {
            if (Validation.IsValid())
            {
                //hier open je de database
                string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\BridesDatabase.mdf;Integrated Security=True";
                string provider = "System.Data.SqlClient";
                Database db = Database.OpenConnectionString(connectionString, provider);

                //hier pak je het ID dat bij de logincode hoort
                var selectedLoginCode = db.QueryValue(selectLoginCode, Request.QueryString["searchCode"]);

                //hier stel je de sessions in
                Session["GuestLoggedIn"] = "Yes";
                Session["userID"] = selectedLoginCode;

                //stuurt gasten door naar volgende pagina
                Response.Redirect("~/GastenPagina?id=@" + selectedLoginCode);
            }
            //als de code niet geldig is ververst de pagina
            else
            {
                Response.Redirect("~/Login.cshtml");
            }
        }
    }

    //Register
    {

        if (IsPost && Validation.IsValid())
        {
            // als alles juist is ingevuld 
            RegisterUname = Request.Form["RegisterUname"];
            RegisterEmail = Request.Form["RegisterEmail"];
            RegisterPassword = Request.Form["RegisterPassword"];
            RegisterName = Request.Form["RegisterName"];
            RegisterPasswordConfirm = Request.Form["RegisterPasswordConfirm"];

            // als beide wachtwoorden overeenkomen
            if (RegisterPasswordConfirm == RegisterPassword)
            {
                // hier wordt het wachtwoord geencrypt
                RegisterPassword = Request.Form["RegisterPassword"];
                hashed = Crypto.Hash(RegisterPassword, "MD5");
                sha256 = Crypto.SHA256(RegisterPassword);
                sha1 = Crypto.SHA1(RegisterPassword);
                salt = Crypto.GenerateSalt();
                RegisterHashedPassword = Crypto.HashPassword(RegisterPassword);

                // hier opent hij de database
                string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\BridesDatabase.mdf;Integrated Security=True";
                string provider = "System.Data.SqlClient";
                Database db = Database.OpenConnectionString(connectionString, provider);

                // hier vult hij alles in in de database
                var insertCommand = "INSERT INTO Account (UName, Email, Password, Name, Code) Values(@0, @1, @2, @3, @4)";
                db.Execute(insertCommand, RegisterUname, RegisterEmail, RegisterHashedPassword, RegisterName, Guid.NewGuid());
                Response.Redirect("~/Login.cshtml");
            }
        }
    }

    //ResetPassword
    {
        ResetEmail = Request.Form["ResetEmail"];


    }


}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>LoginPage</title>
    <!--<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <!--<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script> -->
    <!--<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <link rel="stylesheet" href="~/Content/login.css">
    <script src="~/Scripts/login.js"></script>-->
    <!--<link href='css files/login2.css' rel='stylesheet' type='text/css'> -->
    <!--<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <title>Login a Special Day</title>-->
</head>
<body>

</body>
</html>
<!-- LOGIN FORM -->
<div class="text-center" style="padding:50px 0">
    <div class="logo">login</div>
    <div class="login-form-1">
        <form id="login-form" class="text-left">
            <div class="login-form-main-message"></div>
            <div class="main-login-form">
                <div class="login-group">
                    <div class="form-group">
                        <label for="lg_username" class="sr-only">Gebruikersnaam</label>
                        <input type="text" class="form-control" id="LoginUser" name="LoginUser" placeholder="gebruikersnaam" @Validation.For("LoginUser")>
                        @Html.ValidationMessage("LoginUser")
                    </div>
                    <div class="form-group">
                        <label for="lg_password" class="sr-only">Wachtwoord</label>
                        <input type="password" class="form-control" id="LoginPassword" name="LoginPassword" placeholder="wachtwoord" @Validation.For("LoginPassword")>
                        @Html.ValidationMessage("loginPassword")
                    </div>
                    <div class="form-group login-group-checkbox">
                        <input type="checkbox" id="lg_remember" name="lg_remember">
                        <label for="lg_remember">onthoud</label>
                    </div>
                </div>
                <button type="submit" class="login-button">></button>
            </div>
        </form>
    </div>
</div>
<!-- Code Input Form-->
<div class="text-center" style="padding:50px 0"></div>
<div class="logo">Uitnodigings code</div>
<div class="login-form-1">
    <form id="forgot-password-form" class="text-left">
        <div class="etc-login-form">
            <p>Hier kun je de code invoeren die je van het bruidspaar hebt gekregen.</p>
        </div>
        <div class="login-form-main-message"></div>
        <div class="main-login-form">
            <div class="login-group">
                <div class="form-group">
                    <label for="GuestCode" class="sr-only">Uitnodigings Code</label>
                    <input type="text" class="form-control" value="@LoginCode" id="GuestCode" name="GuestCode" placeholder="Uitnodigings Code" @Validation.For("LoginCode")>
                </div>
            </div>
            <button type="submit" class="login-button">><i class="fa fa-chevron-right"></i></button>
        </div>
    </form>
</div>
<!-- REGISTRATION FORM -->
<div class="text-center" style="padding:50px 0">
    <div class="logo">registreer</div>
    <div class="login-form-1">
        <form id="register-form" class="text-left">
            <div class="login-form-main-message"></div>
            <div class="main-login-form">
                <div class="login-group">
                    <div class="form-group">
                        <label for="RegisterUname" class="sr-only">Gebruikersnaam</label>
                        <input type="text" class="form-control" id="RegisterUname" name="RegisterUname" placeholder="Username" value="@Request.Form["RegisterUname"]" @Validation.For("RegisterUname")>
                        @Html.ValidationMessage("RegisterUname")
                    </div>
                    <div class="form-group">
                        <label for="RegisterPassword" class="sr-only">Wachtwoord</label>
                        <input type="password" class="form-control" id="RegisterPassword" name="RegisterPassword" placeholder="wachtwoord" value="@Request.Form["RegisterPassword"]" @Validation.For("RegisterPassword")>
                        @Html.ValidationMessage("RegisterPassword")
                    </div>
                    <div class="form-group">
                        <label for="RegisterPasswordConfirm" class="sr-only">bevestig wachtwoord</label>
                        <input type="password" class="form-control" id="RegisterPasswordConfirm" name="RegisterPasswordConfirm" placeholder="bevestig wachtwoord" value="@Request.Form["RegisterPasswordConfirm"]">
                        @if (!pwvalidation)
                        {
                            <p>
                                Wachtwoorden komen niet overeen.
                            </p>
                        }
                    </div>
                    <div class="form-group">
                        <label for="RegisterEmail" class="sr-only">Email</label>
                        <input type="text" class="form-control" id="RegisterEmail" name="RegisterEmail" placeholder="email" value="@Request.Form["RegisterEmail"]" @Validation.For("RegisterEmail")>
                        @Html.ValidationMessage("RegisterEmail")
                    </div>
                    <div class="form-group">
                        <label for="RegisterName" class="sr-only">Volledige naam</label>
                        <input type="text" class="form-control" id="RegisterName" name="RegisterName" placeholder="volledige naam" value="@Request.Form["RegisterName"]" @Validation.For("RegisterName")>
                        @Html.ValidationMessage("RegisterName")
                    </div>
                </div>
                <button type="submit" class="login-button">><i class="fa fa-chevron-right"></i></button>
            </div>
        </form>
    </div>
</div>

<!-- FORGOT PASSWORD FORM -->
<div class="text-center" style="padding:50px 0">
    <div class="logo">wachtwoord vergeten</div>
    <!-- Main Form -->
    <div class="login-form-1">
        <form id="forgot-password-form" class="text-left">
            <div class="etc-login-form">
                <p>Als je hier je email adres invoert worden er instructies verzonden die vertellen hoe je je wachtwoord reset.</p>
            </div>
            <div class="login-form-main-message"></div>
            <div class="main-login-form">
                <div class="login-group">
                    <div class="form-group">
                        <label for="fp_email" class="sr-only">Email address</label>
                        <input type="text" class="form-control" id="fp_email" name="fp_email" placeholder="email adres">
                    </div>
                </div>
                <button type="button" onclick="location.href = 'Index.cshtml'" class="login-button"><i class="fa fa-chevron-right"></i></button>
            </div>
        </form>
    </div>
    <!-- end:Main Form -->
</div>